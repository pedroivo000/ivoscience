---
title: Team fights during Overwatch League week 1
author: Pedro Ivo Guimar√£es
date: '2018-01-18'
categories:
  - data analysis
  - esports
  - R
  - statistics
tags:
  - match data
  - overwatch
  - overwatch league
  - R Markdown
  - team fights
subtitle: How team composition, engagement order and fight timings can determine the
  outcome of a match
draft: yes
slug: owl-s1w1-match-breakdown
---

```{r libraries, include=FALSE}
library(tidyverse)
library(DT)
library(widgetframe)
```

# League matches team fight dataset

[Winston's lab](https://www.winstonslab.com/) is an awesome website that analyses Overwactch pro matches and generates *a ton* of stats for pretty much everything you can think of related to Overwatch: hero pick-rates, team comps, match score, player performance stats and much much more. [They even have a fantasy league!](https://www.winstonslab.com/fantasy/) If you haven't checked them out yet, you really should.

We can use Winston's Lab ["Complete Fight Info"](https://www.winstonslab.com/customquery/completeFightInfo/) form to retrieve the recorded stats of every team fight from all matches played during the first week of the Overwatch League inaugural season. As there is no obvious way to download datasets from Winston's lab (I couldn't find one), I just copied and pasted [the query results](https://www.winstonslab.com/customquery/completeFightInfo/?onlyLANs=on&dateGreater=&dateSmaller=&event%5B%5D=86&specificMatchupTeam1=0&specificMatchupTeam2=0&team%5B%5D=&map%5B%5D=&roundtype%5B%5D=&fightlength=0&killsmade=1&ultsused=0&heroes=&heroesUlted=) into a text file and after some formatting, we know have a R-friendly table ready to be imported using the `readr` package from `tidyverse`. 

```{r match-data-import, message=FALSE, warning=FALSE}
#file path
matchdata_filepath <- "~/ivoscience/data/owl-s1w1-match-data/owl-s1w1-teamfight-data.csv"

#Importing the .csv file with the team fight data
match_data <- read_csv(matchdata_filepath) %>%
  rename_all(funs(tolower(gsub(' ','_', .)))) #change whitespaces to underscore and lower case column names
```

```{r match-data-view, echo=F}
match_data
```

Each row in `match_data` corresponds to a unique team fight with the following recorded stats:

- `time`: match timestamp of when team fight started;
- `len`: team fight duration;
- `kb` and `kr`: kills by the blue and red team, respectivelly;
- `ub` and `ur`: blue/red team ultimates used during fight;
- `fb`: team that drew frist blood (first kill) on a team fight;
- `death_sequence`: string with character elimination order, from first to last;
- `ults_blue` and `ults_red`: hero ultimates used by team during team fight;
- `teamcomp`: composition of each team at the start of team fight;

We still have to do some cleanup before we can utilize this dataset. First of all, if we look at the `death_sequence` column, we can see that the hero names are concatenated in a string with no spaces or special characters between words, *except* `Soldier: 76` and `D.Va`. We need to make these hero names consitent with the other ones and split the `death_sequence` strings on the character names.

```{r data-cleanup}
clean_data <- match_data %>%
  mutate_all(funs(gsub('Soldier: 76', 'Soldier76', .))) %>% 
  mutate_all(funs(gsub('D.Va', 'Dva', .))) %>%
  #A little hack to split the character name string: add a comma between each name
  mutate_at(vars(death_sequence:teamcomp_red), funs(gsub("([[:upper:]])", ",\\1", .))) %>%
  mutate_at(vars(death_sequence:teamcomp_red), funs(substr(., 2, nchar(.)))) %>% #removing first comma
  separate_rows(death_sequence, sep = ",")
  

```

Now that we have the tidy `clean_data` table, we can start analysing the team fight data for the first week ever of the Overwatch League.

# General team fight statistics for OWL Week 1

```{r team-fight-counts, echo=F}
#total fights during week 1:
w1_total_fights <- nrow(match_data)

#Team fights per match
fights_per_match <- match_data %>%
  group_by(blue_team, red_team) %>%
  tally() %>%
  arrange(desc(n))

fights_per_team <- fights_per_match %>%
  gather(color, team, -n) %>%
  group_by(team) %>%
  summarise(total_per_team = sum(n))
```

During the first week of matches, teams engaged on a total of **`r nrow(match_data)` team fights**, with an average of `r round(mean(fights_per_match$n), digits = 1)` $\pm$ `r round(sd(fights_per_match$n), digits = 1)` fights per match. Unsurprisingly, the longest and most contested matches were the ones with the biggest number of team fights, with [Dallas Fuel vs LA Valiant](https://overwatchleague.com/en-us/videos?v=ED0EVk4mBbJ) in the lead with a total of `r fights_per_match$n[1]` engagements, followed very closely by [Dallas vs Seoul Dinasty](https://overwatchleague.com/en-us/videos?v=OUz-fWqAyns), with `r fights_per_match$n[2]` fights (why do you do this kind of things to me, Dallas? My heart cannot handle this). On the other side, at the bottom of the team fight per match counts are [Shangai Dragons vs LA Gladiators](https://overwatchleague.com/en-us/videos?v=G_3dlOI_f8l) (`r fights_per_match$n[12]`) and [Boston Uprising vs NY Excelsior](https://overwatchleague.com/en-us/videos?v=qJiFC_s4i0l) (`r fights_per_match$n[11]`).

```{r fight-per-match-plot}
fights_per_match %>%
  unite(match, blue_team, red_team, sep = ' vs ') %>%
  mutate(id = 'dummy') %>%
  # ggplot(., aes(x=id, y=n, label = match)) +
  #   geom_boxplot()+
  #   geom_dotplot(binaxis = 'y', 
  #                stackdir = 'centerwhole',
  #                dotsize = 1)+
  # coord_flip()
  ggplot(., aes(x=n, y=id, color = match))+
    geom_point(position = position_dodge(width = 1), size = 5)
  
```

