<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ivo Science on Ivo Science</title>
    <link>/</link>
    <description>Recent content in Ivo Science on Ivo Science</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>First post ever (with blogdown)!</title>
      <link>/post/first-post/</link>
      <pubDate>Thu, 18 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/first-post/</guid>
      <description>&lt;div id=&#34;hello-world&#34; class=&#34;section level2&#34;&gt;
&lt;h2&gt;Hello World!&lt;/h2&gt;
&lt;p&gt;This is the &lt;del&gt;obligatory&lt;/del&gt; first post ever on this blog!&lt;/p&gt;
&lt;p&gt;I was bored one day writing my research paper and decided that I needed a more productive and useful way to procastinate, so here we are. I might not make much sense to procastinate writing with more writing, but I plan on using this blog to practice my Data Science, programming and scientific writing/communication skills and as a way of uniting my love for data analysis to my many other interests such as gaming and Esports (Overwatch FTW), Bioinformatics and Biology. The more I write, the better I’ll get!&lt;/p&gt;
&lt;p&gt;And in the spirit of practicing my R coding skills, I decided to write all the content for the blog using R Markdown and the package &lt;code&gt;blogdown&lt;/code&gt;! &lt;code&gt;blogdown&lt;/code&gt; is &lt;a href=&#34;https://github.com/rstudio/blogdown&#34;&gt;an amazing R package&lt;/a&gt; developed by Yihui Xie that provides everything needed to create a static website (like a blog), from selecting a theme from the static website generator &lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt; to deplyoing your site to &lt;em&gt;THE INTERNET&lt;/em&gt;. &lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34;&gt;Here’s the documentation for the &lt;code&gt;blogdown&lt;/code&gt; package&lt;/a&gt; if you want to know more about it. This post was written with R markdown and the blog itself was setup using &lt;code&gt;blogdown&lt;/code&gt; and RStudio.&lt;/p&gt;
&lt;p&gt;That’s all for now. Hope you enjoy the rest of the content here :)&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Team fights during Overwatch League week 1</title>
      <link>/post/owl-s1w1-match-breakdown/</link>
      <pubDate>Thu, 18 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/owl-s1w1-match-breakdown/</guid>
      <description>&lt;div id=&#34;league-matches-team-fight-dataset&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;League matches team fight dataset&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://www.winstonslab.com/&#34;&gt;Winston’s lab&lt;/a&gt; is an awesome website that analyses Overwactch pro matches and generates &lt;em&gt;a ton&lt;/em&gt; of stats for pretty much everything you can think of related to Overwatch: hero pick-rates, team comps, match score, player performance stats and much much more. &lt;a href=&#34;https://www.winstonslab.com/fantasy/&#34;&gt;They even have a fantasy league!&lt;/a&gt; If you haven’t checked them out yet, you really should.&lt;/p&gt;
&lt;p&gt;We can use Winston’s Lab &lt;a href=&#34;https://www.winstonslab.com/customquery/completeFightInfo/&#34;&gt;“Complete Fight Info”&lt;/a&gt; form to retrieve the recorded stats of every team fight from all matches played during the first week of the Overwatch League inaugural season. As there is no obvious way to download datasets from Winston’s lab (I couldn’t find one), I just copied and pasted &lt;a href=&#34;https://www.winstonslab.com/customquery/completeFightInfo/?onlyLANs=on&amp;amp;dateGreater=&amp;amp;dateSmaller=&amp;amp;event%5B%5D=86&amp;amp;specificMatchupTeam1=0&amp;amp;specificMatchupTeam2=0&amp;amp;team%5B%5D=&amp;amp;map%5B%5D=&amp;amp;roundtype%5B%5D=&amp;amp;fightlength=0&amp;amp;killsmade=1&amp;amp;ultsused=0&amp;amp;heroes=&amp;amp;heroesUlted=&#34;&gt;the query results&lt;/a&gt; into a text file and after some formatting, we know have a R-friendly table ready to be imported using the &lt;code&gt;readr&lt;/code&gt; package from &lt;code&gt;tidyverse&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#file path
matchdata_filepath &amp;lt;- &amp;quot;~/ivoscience/data/owl-s1w1-match-data/owl-s1w1-teamfight-data.csv&amp;quot;

#Importing the .csv file with the team fight data
match_data &amp;lt;- read_csv(matchdata_filepath) %&amp;gt;%
  rename_all(funs(tolower(gsub(&amp;#39; &amp;#39;,&amp;#39;_&amp;#39;, .)))) #change whitespaces to underscore and lower case column names&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 715 x 16
##       map roundtype blue_team red_team     time   len    kb    kr    ub
##     &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;     &amp;lt;chr&amp;gt;    &amp;lt;chr&amp;gt;   &amp;lt;time&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt; &amp;lt;int&amp;gt;
##  1 Dorado    Attack       SFS      VAL 07:54:00     4     1     1     2
##  2 Dorado    Attack       SFS      VAL 06:49:00    38     1     6     2
##  3 Dorado    Attack       SFS      VAL 06:05:00    26     7     1     4
##  4 Dorado    Attack       SFS      VAL 04:54:00    19     2     4     0
##  5 Dorado    Attack       SFS      VAL 05:23:00     6     0     1     1
##  6 Dorado    Attack       SFS      VAL 04:05:00    18     6     0     1
##  7 Dorado    Attack       SFS      VAL 03:24:00    17     4     2     3
##  8 Dorado    Attack       SFS      VAL 02:14:00    28     7     2     3
##  9 Dorado    Attack       SFS      VAL 01:51:00     7     0     1     1
## 10 Dorado    Attack       SFS      VAL 01:05:00    24     1     6     2
## # ... with 705 more rows, and 7 more variables: ur &amp;lt;int&amp;gt;, fb &amp;lt;chr&amp;gt;,
## #   death_sequence &amp;lt;chr&amp;gt;, ults_blue &amp;lt;chr&amp;gt;, ults_red &amp;lt;chr&amp;gt;,
## #   teamcomp_blue &amp;lt;chr&amp;gt;, teamcomp_red &amp;lt;chr&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Each row in &lt;code&gt;match_data&lt;/code&gt; corresponds to a unique team fight with the following recorded stats:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;time&lt;/code&gt;: match timestamp of when team fight started;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;len&lt;/code&gt;: team fight duration;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;kb&lt;/code&gt; and &lt;code&gt;kr&lt;/code&gt;: kills by the blue and red team, respectivelly;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ub&lt;/code&gt; and &lt;code&gt;ur&lt;/code&gt;: blue/red team ultimates used during fight;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;fb&lt;/code&gt;: team that drew frist blood (first kill) on a team fight;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;death_sequence&lt;/code&gt;: string with character elimination order, from first to last;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ults_blue&lt;/code&gt; and &lt;code&gt;ults_red&lt;/code&gt;: hero ultimates used by team during team fight;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;teamcomp&lt;/code&gt;: composition of each team at the start of team fight;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We still have to do some cleanup before we can utilize this dataset. First of all, if we look at the &lt;code&gt;death_sequence&lt;/code&gt; column, we can see that the hero names are concatenated in a string with no spaces or special characters between words, &lt;em&gt;except&lt;/em&gt; &lt;code&gt;Soldier: 76&lt;/code&gt; and &lt;code&gt;D.Va&lt;/code&gt;. We need to make these hero names consitent with the other ones and split the &lt;code&gt;death_sequence&lt;/code&gt; strings on the character names.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;clean_data &amp;lt;- match_data %&amp;gt;%
  mutate_all(funs(gsub(&amp;#39;Soldier: 76&amp;#39;, &amp;#39;Soldier76&amp;#39;, .))) %&amp;gt;% 
  mutate_all(funs(gsub(&amp;#39;D.Va&amp;#39;, &amp;#39;Dva&amp;#39;, .))) %&amp;gt;%
  #A little hack to split the character name string: add a comma between each name
  mutate_at(vars(death_sequence:teamcomp_red), funs(gsub(&amp;quot;([[:upper:]])&amp;quot;, &amp;quot;,\\1&amp;quot;, .))) %&amp;gt;%
  mutate_at(vars(death_sequence:teamcomp_red), funs(substr(., 2, nchar(.)))) %&amp;gt;% #removing first comma
  separate_rows(death_sequence, sep = &amp;quot;,&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now that we have the tidy &lt;code&gt;clean_data&lt;/code&gt; table, we can start analysing the team fight data for the first week ever of the Overwatch League.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;general-team-fight-statistics-for-owl-week-1&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;General team fight statistics for OWL Week 1&lt;/h1&gt;
&lt;p&gt;During the first week of matches, teams engaged on a total of &lt;strong&gt;715 team fights&lt;/strong&gt;, with an average of 59.6 &lt;span class=&#34;math inline&#34;&gt;\(\pm\)&lt;/span&gt; 11 fights per match. Unsurprisingly, the longest and most contested matches were the ones with the biggest number of team fights, with &lt;a href=&#34;https://overwatchleague.com/en-us/videos?v=ED0EVk4mBbJ&#34;&gt;Dallas Fuel vs LA Valiant&lt;/a&gt; in the lead with a total of 78 engagements, followed very closely by &lt;a href=&#34;https://overwatchleague.com/en-us/videos?v=OUz-fWqAyns&#34;&gt;Dallas vs Seoul Dinasty&lt;/a&gt;, with 71 fights (why do you do this kind of things to me, Dallas? My heart cannot handle this). On the other side, at the bottom of the team fight per match counts are &lt;a href=&#34;https://overwatchleague.com/en-us/videos?v=G_3dlOI_f8l&#34;&gt;Shangai Dragons vs LA Gladiators&lt;/a&gt; (38) and &lt;a href=&#34;https://overwatchleague.com/en-us/videos?v=qJiFC_s4i0l&#34;&gt;Boston Uprising vs NY Excelsior&lt;/a&gt; (47).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;fights_per_match %&amp;gt;%
  unite(match, blue_team, red_team, sep = &amp;#39; vs &amp;#39;) %&amp;gt;%
  mutate(id = &amp;#39;dummy&amp;#39;) %&amp;gt;%
  # ggplot(., aes(x=id, y=n, label = match)) +
  #   geom_boxplot()+
  #   geom_dotplot(binaxis = &amp;#39;y&amp;#39;, 
  #                stackdir = &amp;#39;centerwhole&amp;#39;,
  #                dotsize = 1)+
  # coord_flip()
  ggplot(., aes(x=n, y=id, color = match))+
    geom_point(position = position_dodge(width = 1), size = 5)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/rmarkdown-libs/figure-html4/fight-per-match-plot-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Example Talk</title>
      <link>/talk/example-talk/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 -0500</pubDate>
      
      <guid>/talk/example-talk/</guid>
      <description>&lt;p&gt;Embed your slides or video here using &lt;a href=&#34;https://sourcethemes.com/academic/post/writing-markdown-latex/&#34; target=&#34;_blank&#34;&gt;shortcodes&lt;/a&gt;. Further details can easily be added using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Deep Learning</title>
      <link>/project/deep-learning/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/project/deep-learning/</guid>
      <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum. Sed ac faucibus dolor, scelerisque sollicitudin nisi. Cras purus urna, suscipit quis sapien eu, pulvinar tempor diam. Quisque risus orci, mollis id ante sit amet, gravida egestas nisl. Sed ac tempus magna. Proin in dui enim. Donec condimentum, sem id dapibus fringilla, tellus enim condimentum arcu, nec volutpat est felis vel metus. Vestibulum sit amet erat at nulla eleifend gravida.&lt;/p&gt;

&lt;p&gt;Nullam vel molestie justo. Curabitur vitae efficitur leo. In hac habitasse platea dictumst. Sed pulvinar mauris dui, eget varius purus congue ac. Nulla euismod, lorem vel elementum dapibus, nunc justo porta mi, sed tempus est est vel tellus. Nam et enim eleifend, laoreet sem sit amet, elementum sem. Morbi ut leo congue, maximus velit ut, finibus arcu. In et libero cursus, rutrum risus non, molestie leo. Nullam congue quam et volutpat malesuada. Sed risus tortor, pulvinar et dictum nec, sodales non mi. Phasellus lacinia commodo laoreet. Nam mollis, erat in feugiat consectetur, purus eros egestas tellus, in auctor urna odio at nibh. Mauris imperdiet nisi ac magna convallis, at rhoncus ligula cursus.&lt;/p&gt;

&lt;p&gt;Cras aliquam rhoncus ipsum, in hendrerit nunc mattis vitae. Duis vitae efficitur metus, ac tempus leo. Cras nec fringilla lacus. Quisque sit amet risus at ipsum pharetra commodo. Sed aliquam mauris at consequat eleifend. Praesent porta, augue sed viverra bibendum, neque ante euismod ante, in vehicula justo lorem ac eros. Suspendisse augue libero, venenatis eget tincidunt ut, malesuada at lorem. Donec vitae bibendum arcu. Aenean maximus nulla non pretium iaculis. Quisque imperdiet, nulla in pulvinar aliquet, velit quam ultrices quam, sit amet fringilla leo sem vel nunc. Mauris in lacinia lacus.&lt;/p&gt;

&lt;p&gt;Suspendisse a tincidunt lacus. Curabitur at urna sagittis, dictum ante sit amet, euismod magna. Sed rutrum massa id tortor commodo, vitae elementum turpis tempus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean purus turpis, venenatis a ullamcorper nec, tincidunt et massa. Integer posuere quam rutrum arcu vehicula imperdiet. Mauris ullamcorper quam vitae purus congue, quis euismod magna eleifend. Vestibulum semper vel augue eget tincidunt. Fusce eget justo sodales, dapibus odio eu, ultrices lorem. Duis condimentum lorem id eros commodo, in facilisis mauris scelerisque. Morbi sed auctor leo. Nullam volutpat a lacus quis pharetra. Nulla congue rutrum magna a ornare.&lt;/p&gt;

&lt;p&gt;Aliquam in turpis accumsan, malesuada nibh ut, hendrerit justo. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Quisque sed erat nec justo posuere suscipit. Donec ut efficitur arcu, in malesuada neque. Nunc dignissim nisl massa, id vulputate nunc pretium nec. Quisque eget urna in risus suscipit ultricies. Pellentesque odio odio, tincidunt in eleifend sed, posuere a diam. Nam gravida nisl convallis semper elementum. Morbi vitae felis faucibus, vulputate orci placerat, aliquet nisi. Aliquam erat volutpat. Maecenas sagittis pulvinar purus, sed porta quam laoreet at.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>External Project</title>
      <link>/project/example-external-project/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>/project/example-external-project/</guid>
      <description></description>
    </item>
    
    <item>
      <title>A Person Re-Identification System For Mobile Devices</title>
      <link>/publication/person-re-identification/</link>
      <pubDate>Tue, 01 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>/publication/person-re-identification/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mobile visual clothing search</title>
      <link>/publication/clothing-search/</link>
      <pubDate>Mon, 01 Jul 2013 00:00:00 +0000</pubDate>
      
      <guid>/publication/clothing-search/</guid>
      <description>&lt;p&gt;More detail can easily be written here using &lt;em&gt;Markdown&lt;/em&gt; and $\rm \LaTeX$ math code.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
